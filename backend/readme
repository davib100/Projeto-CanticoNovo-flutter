# üîê C√¢ntico Novo - Backend API

Backend completo do aplicativo C√¢ntico Novo com autentica√ß√£o JWT, OAuth e single-device enforcement.

## üöÄ Tecnologias

- **Node.js** 18+
- **Express.js** 4.x
- **SQLite** 3.x (com WAL mode)
- **JWT** (Access + Refresh Tokens rotativos)
- **Bcrypt** (Hash de senhas)
- **OAuth 2.0** (Google, Microsoft, Facebook)
- **Nodemailer** (Emails transacionais)

## üì¶ Instala√ß√£o

Instalar depend√™ncias
npm install

Copiar vari√°veis de ambiente
cp .env.example .env

Editar .env com suas configura√ß√µes
nano .env

Iniciar servidor em desenvolvimento
npm run dev

Iniciar servidor em produ√ß√£o
npm start

text

## üóÑÔ∏è Estrutura do Banco

O banco de dados SQLite √© criado automaticamente na primeira execu√ß√£o com as seguintes tabelas:

- **users** - Dados dos usu√°rios
- **sessions** - Sess√µes ativas (single-device)
- **password_reset_tokens** - Tokens de redefini√ß√£o de senha
- **email_verification_tokens** - Tokens de verifica√ß√£o de email

## üîí Seguran√ßa

### Autentica√ß√£o JWT

- **Access Token**: Expira em 1 hora
- **Refresh Token**: Expira em 30 dias (rotativo)
- **Single-Device**: Apenas 1 dispositivo ativo por usu√°rio

### Rate Limiting

- **Login**: 5 tentativas / 15 minutos
- **Registro**: 3 registros / hora
- **Reset Senha**: 3 solicita√ß√µes / hora
- **API Geral**: 100 requests / 15 minutos

### Prote√ß√£o de Conta

- Bloqueio autom√°tico ap√≥s 5 tentativas falhas (15 min)
- Senhas com hash bcrypt (10 rounds)
- Tokens criptografados
- HTTPS obrigat√≥rio em produ√ß√£o

## üì° Endpoints

### Autentica√ß√£o P√∫blica

POST /api/v1/auth/register Registrar usu√°rio
POST /api/v1/auth/login Login email/senha
POST /api/v1/auth/google Login com Google
POST /api/v1/auth/microsoft Login com Microsoft
POST /api/v1/auth/facebook Login com Facebook
POST /api/v1/auth/refresh Renovar token
POST /api/v1/auth/logout Fazer logout
POST /api/v1/auth/reset-password Solicitar reset
POST /api/v1/auth/reset-password/confirm Confirmar reset

text

### Rotas Protegidas (requerem token)

GET /api/v1/auth/me Dados do usu√°rio
GET /api/v1/auth/sessions Listar sess√µes
POST /api/v1/auth/revoke-session Revogar sess√£o

text

## üìù Exemplos de Uso

### Registro

curl -X POST http://localhost:3000/api/v1/auth/register
-H "Content-Type: application/json"
-d '{
"fullName": "Jo√£o Silva",
"email": "joao@example.com",
"password": "SenhaForte123",
"deviceId": "device-uuid-123"
}'

text

### Login

curl -X POST http://localhost:3000/api/v1/auth/login
-H "Content-Type: application/json"
-d '{
"email": "joao@example.com",
"password": "SenhaForte123",
"deviceId": "device-uuid-123",
"rememberMe": true
}'

text

### Refresh Token

curl -X POST http://localhost:3000/api/v1/auth/refresh
-H "Content-Type: application/json"
-d '{
"refreshToken": "your-refresh-token"
}'

text

### Rota Protegida

curl -X GET http://localhost:3000/api/v1/auth/me
-H "Authorization: Bearer your-access-token"

text

## üß™ Testes

Executar testes
npm test

Executar com coverage
npm test -- --coverage

text

## üìä Monitoramento

### Logs

Todos os requests s√£o logados com:
- Timestamp
- M√©todo HTTP
- Path
- Status Code
- Dura√ß√£o
- IP
- User Agent

### Health Check

curl http://localhost:3000/health

text

Resposta:
{
"status": "ok",
"timestamp": "2025-10-10T18:30:00.000Z",
"uptime": 12345.67
}

text

## üîß Configura√ß√£o OAuth

### Google

1. Acesse [Google Cloud Console](https://console.cloud.google.com)
2. Crie um projeto
3. Ative Google+ API
4. Crie credenciais OAuth 2.0
5. Configure redirect URI: `http://localhost:3000/auth/google/callback`
6. Adicione Client ID e Secret no `.env`

### Microsoft

1. Acesse [Azure Portal](https://portal.azure.com)
2. Registre um aplicativo
3. Configure redirect URI
4. Adicione Client ID e Secret no `.env`

### Facebook

1. Acesse [Facebook Developers](https://developers.facebook.com)
2. Crie um app
3. Configure Facebook Login
4. Adicione App ID e Secret no `.env`

## üìß Configura√ß√£o de Email

### Gmail

1. Ative "Verifica√ß√£o em 2 etapas"
2. Gere uma "Senha de app"
3. Configure no `.env`:

EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=seu-email@gmail.com
EMAIL_PASSWORD=sua-senha-de-app

text

## üöÄ Deploy

### Produ√ß√£o

Build
npm run build

Start
NODE_ENV=production npm start

text

### Docker

FROM node:18-alpine
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production
COPY . .
EXPOSE 3000
CMD ["npm", "start"]

text

## üìÑ Licen√ßa

MIT ¬© C√¢ntico Novo Team

---

**Desenvolvido com ‚ù§Ô∏è para o projeto C√¢ntico Novo** üéµ